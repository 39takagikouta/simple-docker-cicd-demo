docker compose psでdocker composeで起動されたコンテナのステータスを見ることができる
docker container lsと変わらない

手順

docker compose exec api bash

cd /workspace
./gradlew bootRun

docker compose exec web bash

cd /workspace
npm install 
ここまで
npm run start

loalhost:8080/api/hello
→文字列が出るはず

dockercomposeni

environment:
  - REACT_APP_API_SERVER=http://localhost:8080/api

  docker compose down
  upして同じのをする
  npm installは二度必要ない

  down

devcontainerの拡張機能の名前は拡張機能の画面の右に書いてある

・開発環境と本番環境を比べる
デフォルトではurlは80番ポートに接続させる
また、現状はwebにもapiにもブラウザからリクエストを送っているが、これを全てwebに送って、apiにリクエストを送りたいときはweb経由でブリッジネットワークの名前解決で送ることにする
これならipアドレスが変わっても問題ない　これがデプロイ時に変わってしまうから

AWS
IAMはAWSのサービスに対するアクセス宣言を設定する
今回の場合はgithub actionsにあげなあかん　トークンを発行する